{"version":3,"sources":["events.js"],"names":[],"mappingsfile":"events.js","sourcesContent":["var clientId = '77587040839-8rh5g1dbhbur1hpmao2f5dgc0256dj27.apps.googleusercontent.com';\nvar apiKey = 'AIzaSyCRP13syzKkOemWXKA3wXi1_bJsj_Fe3c0';\nvar userTimeZone = \"Zurich\";\nvar maxRows = 10;\nvar calName = \"Internet-Veranstaltungen\";\nvar calendar=[];\ncalendar[0]=\"web-professionals.ch_7j3opk4ea81j075e22eokd74ro@group.calendar.google.com\";// Public Veranstaltungen\ncalendar[1]=\"web-professionals.ch_hvur00fojbon20ivoleejrlvk8@group.calendar.google.com\";// WebPro Veranstaltungen\n\nvar scopes = 'https://www.googleapis.com/auth/calendar';\n\nvar events=[];\nvar calendarsParsed = 0;\nvar eventsParsed = 0;\n\n// Add a 0 to numbers\nfunction padNum(num) {\n    if (num <= 9) {\n        return \"0\" + num;\n    }\n    return num;\n}\n\n// num Month to String\nfunction monthString(num) {\n    if (num === \"01\") { return \"Januar\"; }\n    else if (num === \"02\") { return \"Februar\"; }\n    else if (num === \"03\") { return \"MÃ¤rz\"; }\n    else if (num === \"04\") { return \"April\"; }\n    else if (num === \"05\") { return \"Mai\"; }\n    else if (num === \"06\") { return \"Juni\"; }\n    else if (num === \"07\") { return \"Juli\"; }\n    else if (num === \"08\") { return \"August\"; }\n    else if (num === \"09\") { return \"September\"; }\n    else if (num === \"10\") { return \"Oktober\"; }\n    else if (num === \"11\") { return \"November\"; }\n    else if (num === \"12\") { return \"Dezember\"; }\n}\n\n// from num to day of week\nfunction dayString(num){\n    if (num == \"1\") { return \"Montag\" }\n    else if (num == \"2\") { return \"Dienstag\" }\n    else if (num == \"3\") { return \"Mittwoch\" }\n    else if (num == \"4\") { return \"Donnerstag\" }\n    else if (num == \"5\") { return \"Freitag\" }\n    else if (num == \"6\") { return \"Samstag\" }\n    else if (num == \"0\") { return \"Sonntag\" }\n}\n\n// client CALL\nfunction handleClientLoad() {\n    gapi.client.setApiKey(apiKey);\n    checkAuth();\n}\n\n// check Auth\nfunction checkAuth() {\n    gapi.auth.authorize({client_id: clientId, scope: scopes, immediate: true}, handleAuthResult);\n}\n\n// handle result and make CALL\nfunction handleAuthResult(authResult) {\n    if (authResult) {\n        makeApiCall();\n    }\n}\nfunction calendarDone() {\n    calendarsParsed++;\n\n    if (calendarsParsed == calendar.length) {\n        events.sort(function(a, b){\n            var dateA=new Date(a.startDate), dateB=new Date(b.startDate)\n            return dateA-dateB //sort by date ascending\n        });\n\n        console.log(events);\n        drawCards(events);\n    }\n}\n\nfunction makeApiCall() {\n\n    var today = new Date(); //today date\n    gapi.client.load('calendar', 'v3', function () {\n        for (var c = 0; c < calendar.length; c++) {\n            var request = gapi.client.calendar.events.list({\n                'calendarId' : calendar[c],\n                'timeZone' : userTimeZone,\n                'singleEvents': true,\n                'timeMin': today.toISOString(), //gathers only events not happened yet\n                'maxResults': maxRows,\n                'orderBy': 'startTime'});\n            request.execute(function (resp) {\n                for (var i = 0; i < resp.items.length; i++) {\n                    var item = resp.items[i];\n                    var location = item.location;\n                    var link = item.description;\n                    var allDay = item.start.date? true : false;\n\n                    var startDT = allDay ? item.start.date : item.start.dateTime;\n                    var startDateTime = startDT.split(\"T\"); //split date from time\n                    var startDate = startDateTime[0].split(\"-\"); //split yyyy mm dd\n                    var startYear = startDate[0];\n                    var startMonth = monthString(startDate[1]);\n                    var startDay = startDate[2];\n                    var startDateISO = new Date(startDate[1] + \" \" + startDay + \", \" + startYear + \" 00:00:00\");\n                    var startDayWeek = dayString(startDateISO.getDay());\n\n                    var endDT = allDay ? item.end.date : item.end.dateTime;\n                    var endDateTime = endDT.split(\"T\"); //split date from time\n                    var endDate = endDateTime[0].split(\"-\"); //split yyyy mm dd\n                    var endYear = endDate[0];\n                    var endMonth = monthString(endDate[1]);\n                    var endDay = endDate[2];\n                    var endDateISO = new Date(endDate[1] + \" \" + endDay + \", \" + endYear + \" 00:00:00\");\n                    var endDayWeek = dayString(endDateISO.getDay());\n\n                    //push into events array\n                    events.push({\n                        title:item.summary,\n                        location:item.location,\n                        link:item.link,\n                        summary:item.summary,\n\n                        startDayWeek:startDayWeek,\n                        startDay:startDay,\n                        startMonth:startMonth,\n                        startYear:startYear,\n\n                        endDayWeek:endDayWeek,\n                        endDay:endDay,\n                        endMonth:endMonth,\n                        endYear:endYear,\n\n                        allDay:allDay\n\n                    });\n                }\n                calendarDone();\n            });\n\n        }\n    });\n\n}\n\nfunction drawCards(events) {\n\n    var card = $('.card-event');\n    for (var i = 0; i < events.length; i++) {\n\n        var cardClone = card.clone();\n\n        cardClone.find('.card-events-day').html(events[i].startDayWeek);\n        cardClone.find('.card-events-date').html(events[i].startDay+'. '+events[i].startMonth+' '+events[i].startYear);\n        cardClone.find('.card-events-title').html(events[i].summary);\n        cardClone.find('.card-events-location').html(events[i].location);\n        cardClone.find('.card-action a').attr(\"href\", events[i].link);\n        cardClone.removeClass('card-invisible').addClass('card-visible');\n        cardClone.appendTo('.card-events');\n        console.log('debug'+events[i].summary);\n    }\n    document.getElementById('calendar').innerHTML = 'Veranstaltungen:';\n}\n\n\n\n\n\n\n// API CALL itself\nfunction makeApiCallOLD() {\n    var today = new Date(); //today date\n    gapi.client.load('calendar', 'v3', function () {\n        var request = gapi.client.calendar.events.list({\n            'calendarId' : userEmail,\n            'timeZone' : userTimeZone,\n            'singleEvents': true,\n            'timeMin': today.toISOString(), //gathers only events not happened yet\n            'maxResults': maxRows,\n            'orderBy': 'startTime'});\n        request.execute(function (resp) {\n            var card = $('.card-event');\n            for (var i = 0; i < resp.items.length; i++) {\n                //var li = document.createElement('li');\n                var item = resp.items[i];\n                var classes = [];\n\n                var location = item.location;\n                var link = item.description;\n                var allDay = item.start.date? true : false;\n                var startDT = allDay ? item.start.date : item.start.dateTime;\n                var dateTime = startDT.split(\"T\"); //split date from time\n                var date = dateTime[0].split(\"-\"); //split yyyy mm dd\n                var startYear = date[0];\n                var startMonth = monthString(date[1]);\n                var startDay = date[2];\n                var startDateISO = new Date(date[1] + \" \" + startDay + \", \" + startYear + \" 00:00:00\");\n                var startDayWeek = dayString(startDateISO.getDay());\n                /*\n                 if( allDay == true){\n                 // all day Events\n                 var str = [\n                 startDayWeek, ', ',\n                 startDay, '.',\n                 startMonth, ' ',\n                 startYear, ': ', item.summary ,\n                 location\n                 ];\n                 }\n                 else{\n                 var time = dateTime[1].split(\":\"); //split hh ss etc...\n                 var startHour = time[0];\n                 var startMin = time[1];\n                 var str = [\n                 startDayWeek, ', ',\n                 startDay, '.',\n                 startMonth, ' ',\n                 startYear, ' - ',\n                 startHour, ':', startMin, ': ', item.summary ,\n                 location\n                 ];\n                 }\n                 li.innerHTML = str.join('');\n                 li.setAttribute('class', classes.join(' '));\n                 document.getElementById('events').appendChild(li);\n                 */\n                var cardClone = card.clone();\n\n                cardClone.find('.card-events-day').html(startDayWeek);\n                cardClone.find('.card-events-date').html(startDay+'. '+startMonth+' '+startYear);\n                cardClone.find('.card-events-title').html(item.summary);\n                cardClone.find('.card-events-location').html(location);\n                cardClone.find('.card-action a').attr(\"href\", link);\n                cardClone.removeClass('card-invisible').addClass('card-visible');\n                cardClone.appendTo('.card-events');\n            }\n\n            document.getElementById('calendar').innerHTML = calName;\n        });\n    });\n}"]}