{"version":3,"sources":["events.js"],"names":[],"mappingsfile":"events.js","sourcesContent":["var clientId = '77587040839-8rh5g1dbhbur1hpmao2f5dgc0256dj27.apps.googleusercontent.com';\nvar apiKey = 'AIzaSyCRP13syzKkOemWXKA3wXi1_bJsj_Fe3c0';\nvar userTimeZone = \"Zurich\";\nvar maxRows = 1000;\n\nvar scopes = 'https://www.googleapis.com/auth/calendar';\n\nvar events=[];\nvar calendarsParsed = 0;\n\n// Add a 0 to numbers\nfunction padNum(num) {\n    if (num <= 9) {\n        return \"0\" + num;\n    }\n    return num;\n}\n\n// num Month to String\nfunction monthString(num) {\n    if (num === \"01\") { return \"Januar\"; }\n    else if (num === \"02\") { return \"Februar\"; }\n    else if (num === \"03\") { return \"März\"; }\n    else if (num === \"04\") { return \"April\"; }\n    else if (num === \"05\") { return \"Mai\"; }\n    else if (num === \"06\") { return \"Juni\"; }\n    else if (num === \"07\") { return \"Juli\"; }\n    else if (num === \"08\") { return \"August\"; }\n    else if (num === \"09\") { return \"September\"; }\n    else if (num === \"10\") { return \"Oktober\"; }\n    else if (num === \"11\") { return \"November\"; }\n    else if (num === \"12\") { return \"Dezember\"; }\n}\n\n// from num to day of week\nfunction dayString(num){\n    if (num == \"1\") { return \"Montag\" }\n    else if (num == \"2\") { return \"Dienstag\" }\n    else if (num == \"3\") { return \"Mittwoch\" }\n    else if (num == \"4\") { return \"Donnerstag\" }\n    else if (num == \"5\") { return \"Freitag\" }\n    else if (num == \"6\") { return \"Samstag\" }\n    else if (num == \"0\") { return \"Sonntag\" }\n}\n\n// Web Pro Locations: manual Translation of plain text Calendar locations into object\nfunction locationLookup(locationString) {\n    var location = {};\n    if (locationString.substring(0, 4)==\"Tech\") {\n        location = {\n            name: 'Techfabrik Grabs',\n            street: 'Mühlbachstrasse 11a',\n            zip: '9472',\n            city: 'Grabs',\n            country: 'CH'\n        }\n    } else if (locationString.substring(0, 3)==\"ibW\") {\n        location = {\n            name: 'ibW Höhere Fachschule Südostschweiz',\n            street: 'Bahnhofpark 2a',\n            zip: '7320',\n            city: 'Sargans',\n            country: 'CH'\n        }\n    } else {\n        location = {\n            name: '',\n            street: '',\n            zip: '',\n            city: '',\n            country: ''\n        }\n    }\n    return location;\n}\n\n// client CALL\nfunction handleClientLoad() {\n    gapi.client.setApiKey(apiKey);\n    checkAuth();\n}\n\n// check Auth\nfunction checkAuth() {\n    gapi.auth.authorize({client_id: clientId, scope: scopes, immediate: true}, handleAuthResult);\n}\n\n// handle result and make CALL\nfunction handleAuthResult(authResult) {\n    if (authResult) {\n        makeApiCall();\n    }\n}\n\nfunction makeApiCall() {\n\n    var today = new Date(); //today date\n    gapi.client.load('calendar', 'v3', function () {\n        for (var c = 0; c < calendar.length; c++) {\n            var request = gapi.client.calendar.events.list({\n                'calendarId' : calendar[c],\n                'timeZone' : userTimeZone,\n                'singleEvents': true,\n                'timeMin': today.toISOString(), //gathers only events not happened yet\n                'maxResults': maxRows,\n                'orderBy': 'startTime'});\n            request.execute(function (resp) {\n                for (var i = 0; i < resp.items.length; i++) {\n                    var item = resp.items[i];\n                    var allDay = item.start.date? true : false;\n\n                    var startDT = allDay ? item.start.date : item.start.dateTime;\n                    var startDateTime = startDT.split(\"T\"); //split date from time\n                    var startDate = startDateTime[0].split(\"-\"); //split yyyy mm dd\n                    var startYear = startDate[0];\n                    var startMonth = monthString(startDate[1]);\n                    var startDay = startDate[2];\n                    var startDateISO = new Date(startDate[1] + \" \" + startDay + \", \" + startYear + \" 00:00:00\");\n                    var startDayWeek = dayString(startDateISO.getDay());\n\n                    var endDT = allDay ? item.end.date : item.end.dateTime;\n                    var endDateTime = endDT.split(\"T\"); //split date from time\n                    var endDate = endDateTime[0].split(\"-\"); //split yyyy mm dd\n                    var endYear = endDate[0];\n                    var endMonth = monthString(endDate[1]);\n                    var endDay = endDate[2];\n                    var endDateISO = new Date(endDate[1] + \" \" + endDay + \", \" + endYear + \" 00:00:00\");\n                    var endDayWeek = dayString(endDateISO.getDay());\n\n                    var startHour = 0;\n                    var startMin = 0;\n                    var endHour = 0;\n                    var endMin = 0;\n                    var startDateTimeStructured=0;\n                    var endDateTimeStructured=0;\n                    if( allDay == true){\n                        // all day Events\n                        startDateTimeStructured = startYear+'-'+startDate[1]+'-'+startDay;\n                        endDateTimeStructured = endYear+'-'+endDate[1]+'-'+endDay;\n                    } else {\n                        var startTime = startDateTime[1].split(\":\"); //split hh ss etc...\n                        var endTime = endDateTime[1].split(\":\"); //split hh ss etc...\n                        startHour = startTime[0];\n                        startMin = startTime[1];\n                        endHour = endTime[0];\n                        endMin = endTime[1];\n                        startDateTimeStructured = startYear+'-'+startDate[1]+'-'+startDay+'T'+startHour+':'+startMin;\n                        endDateTimeStructured = endYear+'-'+endDate[1]+'-'+endDay+'T'+endHour+':'+endMin;\n                    }\n\n                    var calType = calendarType[calendar.indexOf(item.organizer.email)]; // get CalendarType (webpro/public) based on CalID (workaround because of async call)\n\n                    var location = {};\n                    location = locationLookup(item.location);\n\n                    //push into events array\n                    events.push({\n                        title:item.summary,\n                        location:item.location,\n                        locationName:location.name,\n                        locationStreet:location.street,\n                        locationZip:location.zip,\n                        locationCity:location.city,\n                        locationCountry:location.country,\n                        hangoutLink:item.hangoutLink,\n                        htmlLink:item.htmlLink,\n                        description:item.description,\n                        summary:item.summary,\n\n                        startDayWeek:startDayWeek,\n                        startDay:startDay,\n                        startMonth:startMonth,\n                        startYear:startYear,\n                        startHour:startHour,\n                        startMin:startMin,\n                        startDateTimeStructured:startDateTimeStructured,\n                        startDate:startDate,\n\n                        endDayWeek:endDayWeek,\n                        endDay:endDay,\n                        endMonth:endMonth,\n                        endYear:endYear,\n                        endHour:endHour,\n                        endMin:endMin,\n                        endDateTimeStructured:endDateTimeStructured,\n\n                        allDay:allDay,\n\n                        calType:calType\n                    });\n                }\n                calendarDone();\n            });\n\n        }\n    });\n\n}\n\n\nfunction calendarDone() {\n    calendarsParsed++;\n\n    if (calendarsParsed == calendar.length) {\n        events.sort(function(a, b){\n            var dateA=new Date(a.startDate), dateB=new Date(b.startDate);\n            return dateA-dateB;\n        });\n        drawCards(events);\n    }\n}\n\nfunction drawCards(events) {\n\n    $('#calendar-loading').hide();\n    var card = $('.card-event');\n    var materialicon;\n    var datumStart;\n    var datumEnde;\n    for (var i = 0; i < events.length; i++) {\n\n        var cardClone = card.clone();\n        var summary = events[i].summary;\n        var location = events[i].location;\n\n        // create location link\n        if (location) {\n            location = '<a href=\"http://maps.google.com/?q='+location+'\" target=\"_blank\">'+location+' <i class=\"material-icons tiny\">place</i></a>';\n        } else {\n            location = '';\n        }\n\n        // get Type of Events (webpro or public)\n        if (events[i].calType=='webpro') {\n            materialicon = 'school';\n            cardClone.find('.card').addClass('webpro-green z-depth-2');\n            cardClone.find('.card-content').addClass('white-text');\n            cardClone.find('a').addClass('white-text');\n        } else {\n            materialicon = 'date_range';\n        }\n\n        // do allDay specific things\n        if( events[i].allDay == true){\n            cardClone.find('.card-events-time').html('ganzer Tag');\n        }\n        else{\n            cardClone.find('.card-events-time').html(events[i].startHour+':'+events[i].startMin+' - '+events[i].endHour+':'+events[i].endMin+' Uhr');\n        }\n\n        // date string based on start/end date\n        if((events[i].startDay!=events[i].endDay)) {\n            // start/end not the same day\n            datumStart = events[i].startDay+'. '+events[i].startMonth+' '+events[i].startYear+' - ';\n            datumEnde = events[i].endDay+'. '+events[i].endMonth+' '+events[i].endYear+'<br>';\n            cardClone.find('.card-events-enddate').html(datumEnde);\n        } else {\n            // same day\n            datumStart = events[i].startDay+'. '+events[i].startMonth+' '+events[i].startYear;\n            cardClone.find('.card-events-enddate').hide();\n        }\n\n        cardClone.find('.card-events-startdate').html(datumStart);\n        cardClone.find('.card-events-day').html(events[i].startDayWeek);\n        cardClone.find('.card-events-title').html(summary);\n        cardClone.find('.card-events-location').html(location);\n        cardClone.find('.card-icon').html(materialicon);\n\n        // create link button if available\n        var desc = events[i].description;\n        if ( desc=='' || desc == null ) {\n            cardClone.find('.card-action').hide();\n        } else if (desc.substring(0, 4)==\"http\") {\n            cardClone.find('.card-action a').attr(\"href\", events[i].description);\n            if (desc.indexOf('web-professionals.ch') !== -1) {\n                cardClone.find('.card-action a').attr(\"target\", '_self');\n            }\n        } else {\n            cardClone.find('.card-action').hide();\n            cardClone.find('.card-events-title').html(summary+'<br>'+events[i].description);\n        }\n\n        cardClone.removeClass('card-invisible').addClass('card-visible');\n        cardClone.appendTo('.card-events');\n    }\n    jsonLD(events);\n}\n\nfunction jsonLD(events) {\n    for (var i = 0; i < events.length; i++) {\n        if (events[i].calType=='webpro') {\n\n\n            var url = events[i].description;\n            if ( url=='' || url == null || url.substring(0, 4)!=\"http\") {\n                url = 'https://web-professionals.ch/veranstaltungen/';\n            }\n\n            var el = document.createElement('script');\n            el.type = 'application/ld+json';\n            el.text = JSON.stringify({\n                \"@context\": \"http://schema.org\",\n                \"@type\": \"Event\",\n                \"name\": events[i].summary,\n                \"startDate\" : events[i].startDateTimeStructured,\n                \"endDate\" : events[i].endDateTimeStructured,\n                \"url\": url,\n                \"location\" : {\n                    \"@type\" : \"Place\",\n                    \"name\" : events[i].locationName,\n                    \"address\": {\n                        \"@type\": \"PostalAddress\",\n                        \"addressLocality\": events[i].locationCity,\n                        \"streetAddress\": events[i].locationStreet,\n                        \"postalCode\": events[i].locationZip,\n                        \"addressCountry\" : events[i].locationCountry\n                    }\n                }\n            });\n            document.querySelector('head').appendChild(el);\n        }\n    }\n}"]}