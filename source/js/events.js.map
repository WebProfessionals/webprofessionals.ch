{"version":3,"sources":["events.js"],"names":[],"mappingsfile":"events.js","sourcesContent":["var clientId = '77587040839-8rh5g1dbhbur1hpmao2f5dgc0256dj27.apps.googleusercontent.com';\r\nvar apiKey = 'AIzaSyCRP13syzKkOemWXKA3wXi1_bJsj_Fe3c0';\r\nvar userTimeZone = \"Zurich\";\r\nvar maxRows = 10;\r\nvar calName = \"Internet-Veranstaltungen\";\r\nvar calendar=[];\r\ncalendar[0]=\"web-professionals.ch_7j3opk4ea81j075e22eokd74ro@group.calendar.google.com\";// Public Veranstaltungen\r\ncalendar[1]=\"web-professionals.ch_hvur00fojbon20ivoleejrlvk8@group.calendar.google.com\";// WebPro Veranstaltungen\r\n\r\nvar scopes = 'https://www.googleapis.com/auth/calendar';\r\n\r\nvar events=[];\r\n\r\n// Add a 0 to numbers\r\nfunction padNum(num) {\r\n    if (num <= 9) {\r\n        return \"0\" + num;\r\n    }\r\n    return num;\r\n}\r\n\r\n// num Month to String\r\nfunction monthString(num) {\r\n    if (num === \"01\") { return \"Januar\"; }\r\n    else if (num === \"02\") { return \"Februar\"; }\r\n    else if (num === \"03\") { return \"MÃ¤rz\"; }\r\n    else if (num === \"04\") { return \"April\"; }\r\n    else if (num === \"05\") { return \"Mai\"; }\r\n    else if (num === \"06\") { return \"Juni\"; }\r\n    else if (num === \"07\") { return \"Juli\"; }\r\n    else if (num === \"08\") { return \"August\"; }\r\n    else if (num === \"09\") { return \"September\"; }\r\n    else if (num === \"10\") { return \"Oktober\"; }\r\n    else if (num === \"11\") { return \"November\"; }\r\n    else if (num === \"12\") { return \"Dezember\"; }\r\n}\r\n\r\n// from num to day of week\r\nfunction dayString(num){\r\n    if (num == \"1\") { return \"Montag\" }\r\n    else if (num == \"2\") { return \"Dienstag\" }\r\n    else if (num == \"3\") { return \"Mittwoch\" }\r\n    else if (num == \"4\") { return \"Donnerstag\" }\r\n    else if (num == \"5\") { return \"Freitag\" }\r\n    else if (num == \"6\") { return \"Samstag\" }\r\n    else if (num == \"0\") { return \"Sonntag\" }\r\n}\r\n\r\n// client CALL\r\nfunction handleClientLoad() {\r\n    gapi.client.setApiKey(apiKey);\r\n    checkAuth();\r\n}\r\n\r\n// check Auth\r\nfunction checkAuth() {\r\n    gapi.auth.authorize({client_id: clientId, scope: scopes, immediate: true}, handleAuthResult);\r\n}\r\n\r\n// handle result and make CALL\r\nfunction handleAuthResult(authResult) {\r\n    if (authResult) {\r\n        makeApiCall();\r\n    }\r\n}\r\n\r\n\r\nfunction makeApiCall() {\r\n\r\n    var today = new Date(); //today date\r\n    gapi.client.load('calendar', 'v3', function () {\r\n        for (var c = 0; c < calendar.length; c++) {\r\n            var request = gapi.client.calendar.events.list({\r\n                'calendarId' : calendar[c],\r\n                'timeZone' : userTimeZone,\r\n                'singleEvents': true,\r\n                'timeMin': today.toISOString(), //gathers only events not happened yet\r\n                'maxResults': maxRows,\r\n                'orderBy': 'startTime'});\r\n            request.execute(function (resp) {\r\n                for (var i = 0; i < resp.items.length; i++) {\r\n                    var item = resp.items[i];\r\n                    var location = item.location;\r\n                    var link = item.description;\r\n                    var allDay = item.start.date? true : false;\r\n\r\n                    var startDT = allDay ? item.start.date : item.start.dateTime;\r\n                    var startDateTime = startDT.split(\"T\"); //split date from time\r\n                    var startDate = startDateTime[0].split(\"-\"); //split yyyy mm dd\r\n                    var startYear = startDate[0];\r\n                    var startMonth = monthString(startDate[1]);\r\n                    var startDay = startDate[2];\r\n                    var startDateISO = new Date(startDate[1] + \" \" + startDay + \", \" + startYear + \" 00:00:00\");\r\n                    var startDayWeek = dayString(startDateISO.getDay());\r\n\r\n                    var endDT = allDay ? item.end.date : item.end.dateTime;\r\n                    var endDateTime = endDT.split(\"T\"); //split date from time\r\n                    var endDate = endDateTime[0].split(\"-\"); //split yyyy mm dd\r\n                    var endYear = endDate[0];\r\n                    var endMonth = monthString(endDate[1]);\r\n                    var endDay = endDate[2];\r\n                    var endDateISO = new Date(endDate[1] + \" \" + endDay + \", \" + endYear + \" 00:00:00\");\r\n                    var endDayWeek = dayString(endDateISO.getDay());\r\n\r\n                    //push into events array\r\n                    events.push({\r\n                        title:item.summary,\r\n                        location:item.location,\r\n                        link:item.link,\r\n                        summary:item.summary,\r\n\r\n                        startDayWeek:startDayWeek,\r\n                        startDay:startDay,\r\n                        startMonth:startMonth,\r\n                        startYear:startYear,\r\n\r\n                        endDayWeek:endDayWeek,\r\n                        endDay:endDay,\r\n                        endMonth:endMonth,\r\n                        endYear:endYear,\r\n\r\n                        allDay:allDay\r\n\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n\r\n    events.sort(function(a, b){\r\n        var dateA=new Date(a.startDate), dateB=new Date(b.startDate)\r\n        return dateA-dateB //sort by date ascending\r\n    });\r\n\r\n    console.log(events);\r\n\r\n\r\n    //drawCards(events);\r\n}\r\n\r\nfunction drawCards(events) {\r\n\r\n    var card = $('.card-event');\r\n    for (var i = 0; i < events.length; i++) {\r\n\r\n        var cardClone = card.clone();\r\n\r\n        cardClone.find('.card-events-day').html(events[i].startDayWeek);\r\n        cardClone.find('.card-events-date').html(events[i].startDay+'. '+events[i].startMonth+' '+events[i].startYear);\r\n        cardClone.find('.card-events-title').html(events[i].summary);\r\n        cardClone.find('.card-events-location').html(events[i].location);\r\n        cardClone.find('.card-action a').attr(\"href\", events[i].link);\r\n        cardClone.removeClass('card-invisible').addClass('card-visible');\r\n        cardClone.appendTo('.card-events');\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// API CALL itself\r\nfunction makeApiCallOLD() {\r\n    var today = new Date(); //today date\r\n    gapi.client.load('calendar', 'v3', function () {\r\n        var request = gapi.client.calendar.events.list({\r\n            'calendarId' : userEmail,\r\n            'timeZone' : userTimeZone,\r\n            'singleEvents': true,\r\n            'timeMin': today.toISOString(), //gathers only events not happened yet\r\n            'maxResults': maxRows,\r\n            'orderBy': 'startTime'});\r\n        request.execute(function (resp) {\r\n            var card = $('.card-event');\r\n            for (var i = 0; i < resp.items.length; i++) {\r\n                //var li = document.createElement('li');\r\n                var item = resp.items[i];\r\n                var classes = [];\r\n\r\n                var location = item.location;\r\n                var link = item.description;\r\n                var allDay = item.start.date? true : false;\r\n                var startDT = allDay ? item.start.date : item.start.dateTime;\r\n                var dateTime = startDT.split(\"T\"); //split date from time\r\n                var date = dateTime[0].split(\"-\"); //split yyyy mm dd\r\n                var startYear = date[0];\r\n                var startMonth = monthString(date[1]);\r\n                var startDay = date[2];\r\n                var startDateISO = new Date(date[1] + \" \" + startDay + \", \" + startYear + \" 00:00:00\");\r\n                var startDayWeek = dayString(startDateISO.getDay());\r\n                /*\r\n                 if( allDay == true){\r\n                 // all day Events\r\n                 var str = [\r\n                 startDayWeek, ', ',\r\n                 startDay, '.',\r\n                 startMonth, ' ',\r\n                 startYear, ': ', item.summary ,\r\n                 location\r\n                 ];\r\n                 }\r\n                 else{\r\n                 var time = dateTime[1].split(\":\"); //split hh ss etc...\r\n                 var startHour = time[0];\r\n                 var startMin = time[1];\r\n                 var str = [\r\n                 startDayWeek, ', ',\r\n                 startDay, '.',\r\n                 startMonth, ' ',\r\n                 startYear, ' - ',\r\n                 startHour, ':', startMin, ': ', item.summary ,\r\n                 location\r\n                 ];\r\n                 }\r\n                 li.innerHTML = str.join('');\r\n                 li.setAttribute('class', classes.join(' '));\r\n                 document.getElementById('events').appendChild(li);\r\n                 */\r\n                var cardClone = card.clone();\r\n\r\n                cardClone.find('.card-events-day').html(startDayWeek);\r\n                cardClone.find('.card-events-date').html(startDay+'. '+startMonth+' '+startYear);\r\n                cardClone.find('.card-events-title').html(item.summary);\r\n                cardClone.find('.card-events-location').html(location);\r\n                cardClone.find('.card-action a').attr(\"href\", link);\r\n                cardClone.removeClass('card-invisible').addClass('card-visible');\r\n                cardClone.appendTo('.card-events');\r\n            }\r\n\r\n            document.getElementById('calendar').innerHTML = calName;\r\n        });\r\n    });\r\n}"],"sourceRoot":"/source/"}